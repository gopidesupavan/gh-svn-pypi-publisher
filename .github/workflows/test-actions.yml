name: Tes gh-svn-pypi-publisher
description: "Publish to PyPI"

on:
  workflow_dispatch:
    inputs:
      release-config:
        description: "Path to the release config file"
        required: true
        default: "release-config.yml"
      temp-dir:
        description: >
          Checkout directory of svn repo, this is used to checkout the svn repo.
        required: false
        default: "asf-dist"
      mode:
        description: "Mode to run the action"
        required: false
        default: "VERIFY"
      if-no-files-found:
        description: >
          The desired behavior if no files are found using the provided path.
  
          Available Options:
            warn: Output a warning but do not fail the action
            error: Fail the action with an error message
            ignore: Do not output any warnings or errors, the action does not fail
        default: 'warn'
      retention-days:
        description: >
          Duration after which artifact will expire in days. 0 means using default retention.
  
          Minimum 1 day.
          Maximum 90 days unless changed from the repository settings page.
        default: '5'
      compression-level:
        description: >
          The level of compression for Zlib to be applied to the artifact archive.
          The value can range from 0 to 9:
          - 0: No compression
          - 1: Best speed
          - 6: Default compression (same as GNU Gzip)
          - 9: Best compression
          Higher levels will result in better compression, but will take longer to complete.
          For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
        default: '6'
      overwrite:
        description: >
          If true, an artifact with a matching name will be deleted before a new one is uploaded.
          If false, the action will fail if an artifact for the given name already exists.
          Does not fail if the artifact does not exist.
        default: 'false'

      artifact-name:
        description: >
          The name of the artifact to be uploaded.
        required: false
        default: "pypi-packages"



jobs:
  release-checks:
    outputs:
      publisher-name: ${{ steps.config-parser.outputs.publisher-name }}
    runs-on: ubuntu-latest
    steps:
     - name: Checkout Code
       uses: actions/checkout@v4
       with:
         persist-credentials: false

     - name: Setup Python
       uses: actions/setup-python@v4
       with:
         python-version: "3.11"

     - name: "Config parser"
       id: config-parser
       uses: ./read-config
       with:
        release-config: ${{ inputs.release-config }}

     - name: "Checkout svn ${{ steps.config-parser.outputs.publisher-url }}"
       id: "svn-checkout"
       uses: ./init
       with:
         temp-dir: ${{ inputs.temp-dir }}
         repo-url: ${{ steps.config-parser.outputs.publisher-url }}
         repo-path: ${{ steps.config-parser.outputs.publisher-path }}

     - name: "Svn check"
       id: "svn-check"
       uses: ./svn
       with:
        svn-config: ${{ steps.config-parser.outputs.checks-svn }}
        temp-dir: ${{ inputs.temp-dir }}
        repo-path: ${{ steps.config-parser.outputs.publisher-path }}

     - name: "Checksum check"
       id: "checksum-check"
       uses: ./checksum
       with:
        checksum-config: ${{ steps.config-parser.outputs.checks-checksum }}
        temp-dir: ${{ inputs.temp-dir }}
        repo-path: ${{ steps.config-parser.outputs.publisher-path }}

     - name: "Signature check"
       id: "signature-check"
       uses: ./signature
       with:
        signature-config: ${{ steps.config-parser.outputs.checks-signature }}
        temp-dir: ${{ inputs.temp-dir }}
        repo-path: ${{ steps.config-parser.outputs.publisher-path }}

     - name: "Find ${{ steps.config-parser.outputs.publisher-name }} packages"
       id: "upload-artifacts"
       uses: ./artifacts
       with:
        publish-config: ${{ steps.config-parser.outputs.checks-publish }}
        temp-dir: ${{ inputs.temp-dir }}
        mode: ${{ inputs.mode }}
        publisher-name: ${{ steps.config-parser.outputs.publisher-name }}
        repo-path: ${{ steps.config-parser.outputs.publisher-path }}
        if-no-files-found: ${{ inputs.if-no-files-found }}
        retention-days: ${{ inputs.retention-days }}
        compression-level: ${{ inputs.compression-level }}
        overwrite: ${{ inputs.overwrite }}


  publish-to-pypi:
    name: Publish svn packages to PyPI
    runs-on: ubuntu-latest
    needs:
      - release-checks
    environment:
      name: test
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: "Download release distributions for ${{ needs.release-checks.outputs.publisher-name }}"
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          merge-multiple: true
          path: ./dist

      - name: "Publishing ${{ needs.release-checks.outputs.publisher-name }} to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: inputs.mode == 'RELEASE'
        with:
          packages-dir: "./dist"
